---
import MainLayout from '@layouts/MainLayout.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths(){
    const allBlogArticles: CollectionEntry<'blog'>[] = await getCollection('blog');
    const phases = allBlogArticles.map(article => article.data.phase);
    const tags = new Set(allBlogArticles.flatMap(article => (article.data.tags)))

    const paths = Array.from(phases).flatMap(phase =>
        Array.from(tags).map(tag => ({
            params: { phase, tag }
        }))
    );

    return paths;
}

const { phase , tag} = Astro.params;

const allBlogArticles: CollectionEntry<'blog'>[] = (await getCollection('blog'));

const allPhases = Array.from(
  new Set(allBlogArticles.map(article => article.data.phase))
).sort();

const allTags = Array.from(
    new Set(allBlogArticles.flatMap(post => (post.data.tags)))
)
const tagArticles = allBlogArticles.filter(post => post.data.tags.includes(tag));

---

<MainLayout pageTitle={`Posts tagged with`}>
       <div>
        {allPhases.map((phase:String) => (
            <a class = "phase" href = {`/blog/phase/${phase}`}>{phase}</a>
            <br/>
        ))}
      </div>

      <div>
        {allTags.map((tag:String) => (
            <a class = "phase" href = {`/blog/phase/${phase}/tag/${tag}`}>{tag}</a>
            <br/>
        ))}
      </div>

        {tagArticles.map(post => (
            <a href ={`/blog/${post.slug}`}>{post.data.title}</a>
            <br/>
        ))}

</MainLayout>
<style>
    div{
        display: flex;
        gap:0.5em;
        margin-bottom:20px;
    }
    .phase{
        background-color: blue;
        color:white;
        text-decoration: none;
        padding:5px 10px;
        border-radius: 20px;
    }
    .phase:hover{
        background-color: darkblue;
    }
</style>